'use strict';
// XHR GET запрос
// Для создания запроса сначала нужно создать объект XMLHtttpRequest, конструктор вызывается без аргументов.
const xhr = new XMLHttpRequest();
// Открывает запрос. Первый аргумент это метод (GET, POST ...), второй адрес, куда нужно отправить запрос. У данного метода есть ещё аргументы, которые мы рассмотрим позже.
xhr.open('GET', 'https://api.github.com/octocat');
// Отправляем запрос на сервер. Метод send() может принимать один аргумент - это тело запроса, если оно есть. Для методов POST мы бы передавали тут тело запроса, наш запрос GET не имеет тела запроса.
xhr.send();

// После отправки запроса нам нужно использовать методы слушатели, которые будут асинхронно выполнены при наступлении соответствующего собятия. Это методы onload, onerror и onprogress - мы сами определяем их функции.

// onload - функция будет вызвана, когда сервер вернёт ответ. Это может быть положительный ответ сервера с кодом 200 (все хорошо), так и ошибка, например страница не найдена, тогда код будет 404. Мы должны обрабатывать такие ситуации сами.
xhr.onload = function () {
    if (xhr.status != 200) { // если статус не 200, то произошла ошибка
        console.log(`Error ${xhr.status}: ${xhr.statusText}`);
    } else {
        console.log(`user : ${xhr.response}`);  // response - это ответ сервера
    }
};

// oneprogress - функция будет вызываться пока запрос находится в процессе, и позволет ослеживать ход процесса отправки запроса и получения ответа от сервера. Бывает полезна при отладке сложных запросов.
xhr.onprogress = function (event) {
    console.log(`Get from server: ${event.loaded} bytes`);
};

// onerror - функция будет вызываться, если в запросе пошло что-то не так. Например нет соединения с сервером или ошибка в адресе запроса.
xhr.onerror = function () {
    console.log("Request error");
};

// Вывод из функции onprogress.
// "Get from server: 901 bytes"

// Вывод из функции onload.
/* 
"user : 
               MMM.           .MMM
               MMMMMMMMMMMMMMMMMMM
               MMMMMMMMMMMMMMMMMMM      ______________________________________
              MMMMMMMMMMMMMMMMMMMMM    |                                      |
             MMMMMMMMMMMMMMMMMMMMMMM   | Mind your words, they are important. |
            MMMMMMMMMMMMMMMMMMMMMMMM   |_   __________________________________|
            MMMM::- -:::::::- -::MMMM    |/
             MM~:~ 00~:::::~ 00~:~MM
        .. MMMMM::.00:::+:::.00::MMMMM ..
              .MM::::: ._. :::::MM.
                 MMMM;:::::;MMMM
          -MM        MMMMMMM
          ^  M+     MMMMMMMMM
              MMMMMMM MM MM MM
                   MM MM MM MM
                   MM MM MM MM
                .~~MM~MM~MM~MM~~.
             ~~~~MM:~MM~~~MM~:MM~~~~
            ~~~~~~==~==~~~==~==~~~~~~
             ~~~~~~==~==~==~==~~~~~~
                 :~==~==~==~==~~
" 
*/

///
// Создан объект xhr и был выполнен запрос, но дальше он нам не нужен, прервем его.
xhr.abort();
